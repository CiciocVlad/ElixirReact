{"ast":null,"code":"var _jsxFileName = \"/Users/reisender/projects/elixir/person_info/frontend/src/components/PersonsList.jsx\",\n    _s = $RefreshSig$();\n\nimport React, { useState } from 'react';\nimport Person from './Person';\nimport { motion } from 'framer-motion';\nimport '../css/style.css';\nimport { baseUrl } from './consts';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport default function PersonsList(props) {\n  _s();\n\n  const [showDetails, setShowDetails] = useState(false);\n  const [detailsFor, setDetailsFor] = useState(-1);\n\n  const getById = async id => {\n    const response = await fetch(`${baseUrl}/api/persons/${id}`);\n    const data = await response.json();\n    return data;\n  };\n\n  const renderCards = () => {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"persons-container\",\n      children: props.persons.map(person => /*#__PURE__*/_jsxDEV(motion.div, {\n        initial: {\n          transform: 'scaleX(0)'\n        },\n        animate: {\n          transform: 'scaleX(1)'\n        },\n        transition: {\n          delay: 0.3 * person.id\n        },\n        children: /*#__PURE__*/_jsxDEV(Person, {\n          person: person,\n          handleDetails: () => setShowDetails(true),\n          handleFor: x => setDetailsFor(x)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 27,\n          columnNumber: 7\n        }, this)\n      }, person.id, false, {\n        fileName: _jsxFileName,\n        lineNumber: 21,\n        columnNumber: 6\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 19,\n      columnNumber: 4\n    }, this);\n  };\n\n  const renderDetails = async () => {\n    console.log(detailsFor);\n    const person = await getById(detailsFor);\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"details-container\",\n      style: {\n        backgroundImage: `url(${person.avatar})`\n      },\n      children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n        children: person.name\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 40,\n        columnNumber: 5\n      }, this), /*#__PURE__*/_jsxDEV(\"h2\", {\n        children: person.role\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 41,\n        columnNumber: 5\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: () => setShowDetails(false),\n        children: \"Close Details\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 42,\n        columnNumber: 5\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 39,\n      columnNumber: 4\n    }, this);\n  };\n\n  return !showDetails ? renderCards() : renderDetails();\n}\n\n_s(PersonsList, \"GVgg/cWZs4C7sTR2TQBFq2XCc7M=\");\n\n_c = PersonsList;\n\nvar _c;\n\n$RefreshReg$(_c, \"PersonsList\");","map":{"version":3,"sources":["/Users/reisender/projects/elixir/person_info/frontend/src/components/PersonsList.jsx"],"names":["React","useState","Person","motion","baseUrl","PersonsList","props","showDetails","setShowDetails","detailsFor","setDetailsFor","getById","id","response","fetch","data","json","renderCards","persons","map","person","transform","delay","x","renderDetails","console","log","backgroundImage","avatar","name","role"],"mappings":";;;AAAA,OAAOA,KAAP,IAAgBC,QAAhB,QAAgC,OAAhC;AACA,OAAOC,MAAP,MAAmB,UAAnB;AACA,SAASC,MAAT,QAAuB,eAAvB;AACA,OAAO,kBAAP;AACA,SAASC,OAAT,QAAwB,UAAxB;;AAEA,eAAe,SAASC,WAAT,CAAqBC,KAArB,EAA4B;AAAA;;AAC1C,QAAM,CAACC,WAAD,EAAcC,cAAd,IAAgCP,QAAQ,CAAC,KAAD,CAA9C;AACA,QAAM,CAACQ,UAAD,EAAaC,aAAb,IAA8BT,QAAQ,CAAC,CAAC,CAAF,CAA5C;;AAEA,QAAMU,OAAO,GAAG,MAAMC,EAAN,IAAY;AAC3B,UAAMC,QAAQ,GAAG,MAAMC,KAAK,CAAE,GAAEV,OAAQ,gBAAeQ,EAAG,EAA9B,CAA5B;AACA,UAAMG,IAAI,GAAG,MAAMF,QAAQ,CAACG,IAAT,EAAnB;AACA,WAAOD,IAAP;AACA,GAJD;;AAMA,QAAME,WAAW,GAAG,MAAM;AACzB,wBACC;AAAK,MAAA,SAAS,EAAC,mBAAf;AAAA,gBACEX,KAAK,CAACY,OAAN,CAAcC,GAAd,CAAkBC,MAAM,iBACxB,QAAC,MAAD,CAAQ,GAAR;AAEC,QAAA,OAAO,EAAE;AAAEC,UAAAA,SAAS,EAAE;AAAb,SAFV;AAGC,QAAA,OAAO,EAAE;AAAEA,UAAAA,SAAS,EAAE;AAAb,SAHV;AAIC,QAAA,UAAU,EAAE;AAAEC,UAAAA,KAAK,EAAE,MAAMF,MAAM,CAACR;AAAtB,SAJb;AAAA,+BAMC,QAAC,MAAD;AAAQ,UAAA,MAAM,EAAEQ,MAAhB;AAAwB,UAAA,aAAa,EAAE,MAAMZ,cAAc,CAAC,IAAD,CAA3D;AAAmE,UAAA,SAAS,EAAEe,CAAC,IAAIb,aAAa,CAACa,CAAD;AAAhG;AAAA;AAAA;AAAA;AAAA;AAND,SACMH,MAAM,CAACR,EADb;AAAA;AAAA;AAAA;AAAA,cADA;AADF;AAAA;AAAA;AAAA;AAAA,YADD;AAcA,GAfD;;AAiBA,QAAMY,aAAa,GAAG,YAAY;AACjCC,IAAAA,OAAO,CAACC,GAAR,CAAYjB,UAAZ;AACA,UAAMW,MAAM,GAAG,MAAMT,OAAO,CAACF,UAAD,CAA5B;AAEA,wBACC;AAAK,MAAA,SAAS,EAAC,mBAAf;AAAmC,MAAA,KAAK,EAAE;AAAEkB,QAAAA,eAAe,EAAG,OAAMP,MAAM,CAACQ,MAAO;AAAxC,OAA1C;AAAA,8BACC;AAAA,kBAAKR,MAAM,CAACS;AAAZ;AAAA;AAAA;AAAA;AAAA,cADD,eAEC;AAAA,kBAAKT,MAAM,CAACU;AAAZ;AAAA;AAAA;AAAA;AAAA,cAFD,eAGC;AAAQ,QAAA,OAAO,EAAE,MAAMtB,cAAc,CAAC,KAAD,CAArC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cAHD;AAAA;AAAA;AAAA;AAAA;AAAA,YADD;AAOA,GAXD;;AAaA,SAAO,CAACD,WAAD,GAAeU,WAAW,EAA1B,GAA+BO,aAAa,EAAnD;AACA;;GAzCuBnB,W;;KAAAA,W","sourcesContent":["import React, { useState } from 'react'\nimport Person from './Person'\nimport { motion } from 'framer-motion'\nimport '../css/style.css'\nimport { baseUrl } from './consts'\n\nexport default function PersonsList(props) {\n\tconst [showDetails, setShowDetails] = useState(false)\n\tconst [detailsFor, setDetailsFor] = useState(-1)\n\t\n\tconst getById = async id => {\n\t\tconst response = await fetch(`${baseUrl}/api/persons/${id}`)\n\t\tconst data = await response.json()\n\t\treturn data\n\t}\n\n\tconst renderCards = () => {\n\t\treturn (\n\t\t\t<div className=\"persons-container\">\n\t\t\t\t{props.persons.map(person =>\n\t\t\t\t\t<motion.div\n\t\t\t\t\t\tkey={person.id}\n\t\t\t\t\t\tinitial={{ transform: 'scaleX(0)' }}\n\t\t\t\t\t\tanimate={{ transform: 'scaleX(1)' }}\n\t\t\t\t\t\ttransition={{ delay: 0.3 * person.id }}\n\t\t\t\t\t>\n\t\t\t\t\t\t<Person person={person} handleDetails={() => setShowDetails(true)} handleFor={x => setDetailsFor(x)} />\n\t\t\t\t\t</motion.div>\n\t\t\t\t)}\n\t\t\t</div>\n\t\t)\n\t}\n\n\tconst renderDetails = async () => {\n\t\tconsole.log(detailsFor)\n\t\tconst person = await getById(detailsFor)\n\n\t\treturn (\n\t\t\t<div className=\"details-container\" style={{ backgroundImage: `url(${person.avatar})` }}>\n\t\t\t\t<h2>{person.name}</h2>\n\t\t\t\t<h2>{person.role}</h2>\n\t\t\t\t<button onClick={() => setShowDetails(false)}>Close Details</button>\n\t\t\t</div>\n\t\t)\n\t}\n\n\treturn !showDetails ? renderCards() : renderDetails()\n}"]},"metadata":{},"sourceType":"module"}
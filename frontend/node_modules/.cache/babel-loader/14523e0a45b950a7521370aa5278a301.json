{"ast":null,"code":"var _jsxFileName = \"/Users/reisender/projects/elixir/person_info/frontend/src/components/PersonsList.jsx\",\n    _s = $RefreshSig$();\n\nimport React, { useState } from 'react';\nimport Person from './Person';\nimport { motion } from 'framer-motion';\nimport '../css/style.css';\nimport { baseUrl } from './consts';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport default function PersonsList(props) {\n  _s();\n\n  const [showDetails, setShowDetails] = useState(false);\n  const [detailsFor, setDetailsFor] = useState(-1);\n  const [pers, setPers] = useState({});\n  const [loaded, setLoading] = useState(false);\n\n  const getById = async id => {\n    const response = await fetch(`${baseUrl}/api/persons/${id}`);\n    const data = await response.json();\n    return data;\n  };\n\n  const renderCards = () => {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"persons-container\",\n      children: props.persons.map(person => /*#__PURE__*/_jsxDEV(motion.div, {\n        initial: {\n          transform: 'scaleX(0)'\n        },\n        animate: {\n          transform: 'scaleX(1)'\n        },\n        transition: {\n          delay: 0.3 * person.id\n        },\n        children: /*#__PURE__*/_jsxDEV(Person, {\n          person: person,\n          handleDetails: () => setShowDetails(true),\n          handleFor: x => setDetailsFor(x)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 29,\n          columnNumber: 7\n        }, this)\n      }, person.id, false, {\n        fileName: _jsxFileName,\n        lineNumber: 23,\n        columnNumber: 6\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 21,\n      columnNumber: 4\n    }, this);\n  };\n\n  const renderDetails = () => {\n    if (!loaded) getById(detailsFor).then(response => {\n      setPers(response.data);\n      setLoading(true);\n    });\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"details-container\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"left-side\",\n        style: {\n          backgroundImage: `url(${pers.avatar})`\n        }\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 45,\n        columnNumber: 5\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"right-side\",\n        children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n          children: pers.name\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 47,\n          columnNumber: 6\n        }, this), /*#__PURE__*/_jsxDEV(\"h2\", {\n          children: pers.role\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 48,\n          columnNumber: 6\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          onClick: () => setShowDetails(false),\n          children: \"Close Details\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 49,\n          columnNumber: 6\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 46,\n        columnNumber: 5\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 44,\n      columnNumber: 4\n    }, this);\n  };\n\n  return !showDetails ? renderCards() : renderDetails();\n}\n\n_s(PersonsList, \"0R1BUGu06mw29chwzZdUJawnf5I=\");\n\n_c = PersonsList;\n\nvar _c;\n\n$RefreshReg$(_c, \"PersonsList\");","map":{"version":3,"sources":["/Users/reisender/projects/elixir/person_info/frontend/src/components/PersonsList.jsx"],"names":["React","useState","Person","motion","baseUrl","PersonsList","props","showDetails","setShowDetails","detailsFor","setDetailsFor","pers","setPers","loaded","setLoading","getById","id","response","fetch","data","json","renderCards","persons","map","person","transform","delay","x","renderDetails","then","backgroundImage","avatar","name","role"],"mappings":";;;AAAA,OAAOA,KAAP,IAAgBC,QAAhB,QAAgC,OAAhC;AACA,OAAOC,MAAP,MAAmB,UAAnB;AACA,SAASC,MAAT,QAAuB,eAAvB;AACA,OAAO,kBAAP;AACA,SAASC,OAAT,QAAwB,UAAxB;;AAEA,eAAe,SAASC,WAAT,CAAqBC,KAArB,EAA4B;AAAA;;AAC1C,QAAM,CAACC,WAAD,EAAcC,cAAd,IAAgCP,QAAQ,CAAC,KAAD,CAA9C;AACA,QAAM,CAACQ,UAAD,EAAaC,aAAb,IAA8BT,QAAQ,CAAC,CAAC,CAAF,CAA5C;AACA,QAAM,CAACU,IAAD,EAAOC,OAAP,IAAkBX,QAAQ,CAAC,EAAD,CAAhC;AACA,QAAM,CAACY,MAAD,EAASC,UAAT,IAAuBb,QAAQ,CAAC,KAAD,CAArC;;AAEA,QAAMc,OAAO,GAAG,MAAMC,EAAN,IAAY;AAC3B,UAAMC,QAAQ,GAAG,MAAMC,KAAK,CAAE,GAAEd,OAAQ,gBAAeY,EAAG,EAA9B,CAA5B;AACA,UAAMG,IAAI,GAAG,MAAMF,QAAQ,CAACG,IAAT,EAAnB;AACA,WAAOD,IAAP;AACA,GAJD;;AAMA,QAAME,WAAW,GAAG,MAAM;AACzB,wBACC;AAAK,MAAA,SAAS,EAAC,mBAAf;AAAA,gBACEf,KAAK,CAACgB,OAAN,CAAcC,GAAd,CAAkBC,MAAM,iBACxB,QAAC,MAAD,CAAQ,GAAR;AAEC,QAAA,OAAO,EAAE;AAAEC,UAAAA,SAAS,EAAE;AAAb,SAFV;AAGC,QAAA,OAAO,EAAE;AAAEA,UAAAA,SAAS,EAAE;AAAb,SAHV;AAIC,QAAA,UAAU,EAAE;AAAEC,UAAAA,KAAK,EAAE,MAAMF,MAAM,CAACR;AAAtB,SAJb;AAAA,+BAMC,QAAC,MAAD;AAAQ,UAAA,MAAM,EAAEQ,MAAhB;AAAwB,UAAA,aAAa,EAAE,MAAMhB,cAAc,CAAC,IAAD,CAA3D;AAAmE,UAAA,SAAS,EAAEmB,CAAC,IAAIjB,aAAa,CAACiB,CAAD;AAAhG;AAAA;AAAA;AAAA;AAAA;AAND,SACMH,MAAM,CAACR,EADb;AAAA;AAAA;AAAA;AAAA,cADA;AADF;AAAA;AAAA;AAAA;AAAA,YADD;AAcA,GAfD;;AAiBA,QAAMY,aAAa,GAAG,MAAM;AAC3B,QAAI,CAACf,MAAL,EACCE,OAAO,CAACN,UAAD,CAAP,CAAoBoB,IAApB,CAAyBZ,QAAQ,IAAI;AACpCL,MAAAA,OAAO,CAACK,QAAQ,CAACE,IAAV,CAAP;AACAL,MAAAA,UAAU,CAAC,IAAD,CAAV;AACA,KAHD;AAKD,wBACC;AAAK,MAAA,SAAS,EAAC,mBAAf;AAAA,8BACC;AAAK,QAAA,SAAS,EAAC,WAAf;AAA2B,QAAA,KAAK,EAAE;AAAEgB,UAAAA,eAAe,EAAG,OAAMnB,IAAI,CAACoB,MAAO;AAAtC;AAAlC;AAAA;AAAA;AAAA;AAAA,cADD,eAEC;AAAK,QAAA,SAAS,EAAC,YAAf;AAAA,gCACC;AAAA,oBAAKpB,IAAI,CAACqB;AAAV;AAAA;AAAA;AAAA;AAAA,gBADD,eAEC;AAAA,oBAAKrB,IAAI,CAACsB;AAAV;AAAA;AAAA;AAAA;AAAA,gBAFD,eAGC;AAAQ,UAAA,OAAO,EAAE,MAAMzB,cAAc,CAAC,KAAD,CAArC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBAHD;AAAA;AAAA;AAAA;AAAA;AAAA,cAFD;AAAA;AAAA;AAAA;AAAA;AAAA,YADD;AAUA,GAjBD;;AAmBA,SAAO,CAACD,WAAD,GAAec,WAAW,EAA1B,GAA+BO,aAAa,EAAnD;AACA;;GAjDuBvB,W;;KAAAA,W","sourcesContent":["import React, { useState } from 'react'\nimport Person from './Person'\nimport { motion } from 'framer-motion'\nimport '../css/style.css'\nimport { baseUrl } from './consts'\n\nexport default function PersonsList(props) {\n\tconst [showDetails, setShowDetails] = useState(false)\n\tconst [detailsFor, setDetailsFor] = useState(-1)\n\tconst [pers, setPers] = useState({})\n\tconst [loaded, setLoading] = useState(false)\n\t\n\tconst getById = async id => {\n\t\tconst response = await fetch(`${baseUrl}/api/persons/${id}`)\n\t\tconst data = await response.json()\n\t\treturn data\n\t}\n\n\tconst renderCards = () => {\n\t\treturn (\n\t\t\t<div className=\"persons-container\">\n\t\t\t\t{props.persons.map(person =>\n\t\t\t\t\t<motion.div\n\t\t\t\t\t\tkey={person.id}\n\t\t\t\t\t\tinitial={{ transform: 'scaleX(0)' }}\n\t\t\t\t\t\tanimate={{ transform: 'scaleX(1)' }}\n\t\t\t\t\t\ttransition={{ delay: 0.3 * person.id }}\n\t\t\t\t\t>\n\t\t\t\t\t\t<Person person={person} handleDetails={() => setShowDetails(true)} handleFor={x => setDetailsFor(x)} />\n\t\t\t\t\t</motion.div>\n\t\t\t\t)}\n\t\t\t</div>\n\t\t)\n\t}\n\n\tconst renderDetails = () => {\n\t\tif (!loaded)\n\t\t\tgetById(detailsFor).then(response => {\n\t\t\t\tsetPers(response.data)\n\t\t\t\tsetLoading(true)\n\t\t\t})\n\n\t\treturn (\n\t\t\t<div className=\"details-container\">\n\t\t\t\t<div className=\"left-side\" style={{ backgroundImage: `url(${pers.avatar})` }}></div>\n\t\t\t\t<div className=\"right-side\">\n\t\t\t\t\t<h2>{pers.name}</h2>\n\t\t\t\t\t<h2>{pers.role}</h2>\n\t\t\t\t\t<button onClick={() => setShowDetails(false)}>Close Details</button>\n\t\t\t\t</div>\n\t\t\t</div>\n\t\t)\n\t}\n\n\treturn !showDetails ? renderCards() : renderDetails()\n}"]},"metadata":{},"sourceType":"module"}